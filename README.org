#+TITLE: Processador 16 bits

* Apresentação
Este repositório apresenta um processador monocíclo desenvolvido a partir do conteúdo apresentado nos capítulos 9 e 10 na 4a edição internacional do livro Logic and Computer Design Fundamentals, M. Morris Mano e Charles Kime, com uma linguagem assembly própria, similar ao MIPS em proporção reduzida para fins didáticos. O desenvolvimento foi iniciado na disciplina de Laboratório de Arquitetura e Organização de Computadores I e concluída durante a disciplina de Arquitetura e Organização de computadores II no CEFET-MG Campus V – Divinópolis. Para fins de avaliação de funcionamento estão disponibilizados implementações de algoritmos, desenvolvidos para esta plataforma. Todo o processador foi implementado sobre o simulador Digital de Helmut Neemann. Para facilitar a tradução de programas mnemônicos para códigos hexadecimais, um compilador foi desenvolvido em linguagem C e também está apresentado.

#+ATTR_ORG: :width 750
[[./Recursos/Digital.png]]

* Funcionamento
Nesse processador existem três tipos de instruções: register, imadiate, jump and branch.

| Register         | OpCode | DR | SA | SB |
| Immediate        | OpCode | DR | SA | OP |
| Jump  and Branch | OpCode | AL | SA | AR |

Em seguida desenvolva o seu algoritmo utilizando os mnemônicos do livro:
#+ATTR_ORG: :width 750
[[./Recursos/Mnemônicos.png]]

* Execução
1. Para executar o processador, primeiro instale o simulador seguindo as instruções em: https://github.com/hneemann/Digital/
2. Em seguida execute o insira o código no arquivo assembly.txt dentro da pasta Assembler e o execute (instruções na pasta)
3. Na pasta Programas se encontram exemplos de código em linguagem de maquina no formato .hex e a planilha utilizada no seu desenvolvimento.
